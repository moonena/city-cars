<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8">
  <title>السيارات المتاحة</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <div class="filters">
    <label for="modelFilter">اختر الموديل:</label>
    <select id="modelFilter">
      <option value="">الكل</option>
    </select>

    <label for="yearFilter">اختر السنة:</label>
    <select id="yearFilter">
      <option value="">الكل</option>
    </select>
  </div>

  <div class="container">
    <h1>السيارات المتاحة</h1>
    <div id="carList" class="car-list"></div>
    <button onclick="location.href='index.html'">رجوع للصفحة الرئيسية</button>
  </div>

  <script>
    const carListElement = document.getElementById("carList");
    const modelFilter = document.getElementById("modelFilter");
    const yearFilter = document.getElementById("yearFilter");

    let cars = JSON.parse(localStorage.getItem("cars")) || [];

    // عرض السيارات
    function displayCars(filteredCars) {
      carListElement.innerHTML = "";
      if (filteredCars.length === 0) {
        carListElement.innerHTML = "<p>لا توجد سيارات مطابقة.</p>";
        return;
      }

      filteredCars.forEach(car => {
        const carDiv = document.createElement("div");
        carDiv.className = "car";
        carDiv.innerHTML = `
          <h3>${car.name}</h3>
          <p>الموديل: ${car.model}</p>
          <p>السنة: ${car.year}</p>
          <p>اللون: ${car.color}</p>
        `;
        carListElement.appendChild(carDiv);
      });
    }

    // تحديث خيارات الفلاتر
    function populateFilters() {
      const models = [...new Set(cars.map(car => car.model))];
      const years = [...new Set(cars.map(car => car.year))];

      models.forEach(model => {
        const option = document.createElement("option");
        option.value = model;
        option.textContent = model;
        modelFilter.appendChild(option);
      });

      years.forEach(year => {
        const option = document.createElement("option");
        option.value = year;
        option.textContent = year;
        yearFilter.appendChild(option);
      });
    }

    // تصفية البيانات
    function applyFilters() {
      const selectedModel = modelFilter.value;
      const selectedYear = yearFilter.value;

      const filteredCars = cars.filter(car => {
        return (selectedModel === "" || car.model === selectedModel) &&
               (selectedYear === "" || car.year === selectedYear);
      });

      displayCars(filteredCars);
    }

    // الأحداث
    modelFilter.addEventListener("change", applyFilters);
    yearFilter.addEventListener("change", applyFilters);

    // تحميل البيانات عند فتح الصفحة
    populateFilters();
    displayCars(cars);
  </script>
</body>
</html>
